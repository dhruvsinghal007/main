1.> Enter select statements to: (Existing table in tutorial)

Display the first name and age for everyone that's in the table.
Display the first name, last name, and city for everyone that's not from Payson.
Display all columns for everyone that is over 40 years old.
Display the first and last names for everyone whose last name ends in an "ay".
Display all columns for everyone whose first name equals "Mary".
Display all columns for everyone whose first name contains "Mary".

<Answers>
select first,age from empinfo;
select first,last,city from empinfo where city <> 'Payson';
select * from empinfo where age > 40;
select first,last from empinfo where last like '%ay';
select * from empinfo where first = 'Mary';
select * from empinfo where first like '%Mary%';

2.>[Jonie Weber, Secretary, 28, 19500.00
Potsy Weber, Programmer, 32, 45300.00
Dirk Smith, Programmer II, 45, 75020.00]

Enter these employees into your table first, and then insert at least 5 more of your own list of
employees in the table.

(One record answer)
insert into employees_1302 (firstname, lastname, title, age, salary)
values ('Jonie', 'Weber', 'Secretary', 28, 19500.00);

3.>
a. Select all columns for everyone in your employee table.
b. Select all columns for everyone with a salary over 30000.
c. Select first and last names for everyone that's under 30 years old.
d. Select first name, last name, and salary for anyone with "Programmer" in their title.
e. Select all columns for everyone whose last name contains "ebe".
f. Select the first name for everyone whose first name equals "Potsy".
g. Select all columns for everyone over 80 years old.
h. Select all columns for everyone whose last name ends in "ith".

<Answers>
a. select * from employees_1302;
b. select * from employees_1302 where salary > 30000;
c. select firstname, lastname from employees_1302 where age > 30;
d. select firstname, lastname, salary from employees_1302 where title like '%Programmer%';
e. select * from employees_1302 where lastname like '%ebe%';
f. select firstname from employees_1302 where firstname = 'Potsy';
g. select * from employees_1302 where age > 80;
h. select * from employees_1302 where lastname like '%ith';

4.> Update statement exercises :
Jonie Weber just got married to Bob Williams. She has requested that her last name be updated to Weber-Williams.
Dirk Smith's birthday is today, add 1 to his age.
All secretaries are now called "Administrative Assistant". Update all titles accordingly.
Everyone that's making under 30000 are to receive a 3500 a year raise.
Everyone that's making over 33500 are to receive a 4500 a year raise.
All "Programmer II" titles are now promoted to "Programmer III".
All "Programmer" titles are now promoted to "Programmer II".

<Answers>
update employees_1302 set lastname = 'Weber-Williams' where firstname = 'Jonie';
update employees_1302 set age = age + 1 where firstname = 'Dirk' and lastname = 'Smith';
update employees_1302 set title = 'Administrative Assistant' where title = 'Secretary';
update employees_1302 set salary = salary + 3500 where salary < 30000;
update employees_1302 set salary = salary + 4500 where salary > 33500;
update employees_1302 set title = 'Programmer III' where title = 'Programmer II';
update employees_1302 set title = 'Programmer II' where title = 'Programmer';

5.> Delete statement exercises

(Use the select statement to verify your deletes):

Jonie Weber-Williams just quit, remove her record from the table.
It's time for budget cuts. Remove all employees who are making over 70000 dollars.

<Answers>
delete from employees_1302 where lastname = 'Weber-Williams';
delete from employees_1302 where salary > 70000;

<......SQL Course Advanced.......>

6.> Select exercises :

From the items_ordered table, select a list of all items purchased for customerid 10449. Display 
the customerid, item, and price for this customer.

Select all columns from the items_ordered table for whoever purchased a Tent.

Select the customerid, order_date, and item values from the items_ordered table for any items in 
the item column that start with the letter "S".

Select the distinct items in the items_ordered table. In other words, display a listing of each 
of the unique items from the items_ordered table.

<Answers>
select customerid, item, price from items_ordered where customerid = 10449;  
select * from items_ordered where item = 'Tent';
select customerid, order_date, item from items_ordered where item like 'S%';
select distinct item from items_ordered;

7.> Review Exercises

Select the maximum price of any item ordered in the items_ordered table. 

Select the average price of all of the items ordered that were purchased in the month of Dec.

What are the total number of rows in the items_ordered table?

For all of the tents that were ordered in the items_ordered table, what is the price of the lowest
tent? 

<Answers>
select max(price) from items_ordered;
select avg(price) from items_ordered where order_date like '%Dec%';
select count(*) from items_ordered;
select min(price) from items_ordered where item = 'Tent';

8.> Review Exercises

How many people are in each unique state in the customers table? Select the state and display the 
number of people in each. 

From the items_ordered table, select the item, maximum price, and minimum price for each specific 
item in the table.

How many orders did each customer make? Use the items_ordered table. Select the customerid, number
of orders they made, and the sum of their orders. 

<Answers>
select state, count(*) from customers group by state;
select item, max(item), min(item) from items_ordered group by item;
select customerid, count(customerid), sum(price) from items_ordered; 
(A little doubt: total numbers should be sum of quantities, while in answer it is written count)

9.> Review Exercises 

How many people are in each unique state in the customers table that have more than one person in 
the state? Select the state and display the number of how many people are in each if it's greater 
than 1.

From the items_ordered table, select the item, maximum price, and minimum price for each specific 
item in the table. Only display the results if the maximum price for one of the items is greater 
than 190.00.

How many orders did each customer make? Use the items_ordered table. Select the customerid, number
of orders they made, and the sum of their orders if they purchased more than 1 item.

<Answers>
select state, count(state) from customers group by state having count(state) > 1;
select item, max(item), min(item) from items_ordered group by item having max(price) > 190.00;
select customerid, count(customerid), sum(price) from items_ordered having sum(customerid) > 1;

10.> Review Exercises

Select the lastname, firstname, and city for all customers in the customers table. Display the 
results in Ascending Order based on the lastname.

Same thing as exercise #1, but display the results in Descending order.

Select the item and price for all of the items in the items_ordered table that the price is 
greater than 10.00. Display the results in Ascending order based on the price. 

<Answers>
select lastname, firstname, city from customers order by lastname;
select lastname, firstname, city from customers order by lastname desc;
select item, price from items_ordered where price > 10.0 order by price;

11.> Review Exercises

Select the customerid, order_date, and item from the items_ordered table for all items unless they
are 'Snow Shoes' or if they are 'Ear Muffs'. Display the rows as long as they are not either of 
these two items.

Select the item and price of all items that start with the letters 'S', 'P', or 'F'.

<Answers>
select customerid, order_date, item from items_ordered 
where item <> 'Snow Shoes' and item <> 'Ear Muffs';

select item, price from items_ordered where item like 'S%' or item like 'P%' or item like 'F%';

12.> Review Exercises

Select the date, item, and price from the items_ordered table for all of the rows that have a 
price value ranging from 10.00 to 80.00.

Select the firstname, city, and state from the customers table for all of the rows where the state
value is either: Arizona, Washington, Oklahoma, Colorado, or Hawaii.

<Answers>
select date, item, price from items_ordered where price between 10.0 and 80.0; 

select firstname, city, state from customers 
where state in ('Arizona', 'Washington', 'Oklahoma', 'Colorado', 'Hawaii');

13.> Review Exercises

Select the item and per unit price for each item in the items_ordered table. 
Hint: Divide the price by the quantity.

<Answers>
select item, sum(price)/sum(quantity) from items_ordered group by item;